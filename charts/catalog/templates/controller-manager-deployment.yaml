kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "fullname" . }}-controller-manager
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  strategy: {{ toYaml .Values.controllerManager.strategy | nindent 4 }}
  minReadySeconds: {{ .Values.controllerManager.minReadySeconds }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}-controller-manager
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "{{ .Values.controllerManager.enablePrometheusScrape }}"
      {{- if .Values.controllerManager.annotations }}
{{ toYaml .Values.controllerManager.annotations | indent 8 }}
      {{- end }}
      labels:
        {{- if .Values.podLabels }}
        {{- tpl (toYaml .Values.podLabels) $ | nindent 8 }}
        {{- end }}
        app: {{ template "fullname" . }}-controller-manager
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
{{- with .Values.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
{{- end }}
      serviceAccountName: "{{ .Values.controllerManager.serviceAccount }}"
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      volumes:
        - name: run
          emptyDir: {}
      containers:
      - name: controller-manager
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/service-catalog:{{.Values.imageTag}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        resources:
{{ toYaml .Values.controllerManager.resources | indent 10 }}
        env:
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        args:
        - controller-manager
        - --secure-port
        - "8444"
        - "--cluster-id-configmap-namespace={{ .Release.Namespace }}"
        {{ if .Values.controllerManager.leaderElection.activated -}}
        - "--leader-election-namespace={{ .Release.Namespace }}"
        - "--leader-elect-resource-lock=configmaps"
        {{- else }}
        - "--leader-elect=false"
        {{- end }}
        {{ if .Values.controllerManager.profiling.disabled -}}
        - "--profiling=false"
        {{- end}}
        {{ if .Values.controllerManager.profiling.contentionProfiling -}}
        - "--contention-profiling=true"
        {{- end}}
        - -v
        - "{{ .Values.controllerManager.verbosity }}"
        - --resync-interval
        - {{ .Values.controllerManager.resyncInterval }}
        {{ if .Values.controllerManager.brokerRelistIntervalActivated -}}
        - --broker-relist-interval
        - {{ .Values.controllerManager.brokerRelistInterval }}
        {{- end }}
        {{ if .Values.controllerManager.operationPollingMaximumBackoffDuration -}}
        - --operation-polling-maximum-backoff-duration
        - {{ .Values.controllerManager.operationPollingMaximumBackoffDuration }}
        {{- end }}
        {{ if .Values.controllerManager.osbApiRequestTimeout -}}
        - --osb-api-request-timeout
        - {{ .Values.controllerManager.osbApiRequestTimeout }}
        {{- end }}
        - --feature-gates
        - OriginatingIdentity={{.Values.originatingIdentityEnabled}}
        - --feature-gates
        - ServicePlanDefaults={{.Values.servicePlanDefaultsEnabled}}
        {{- if .Values.asyncBindingOperationsEnabled }}
        - --feature-gates
        - AsyncBindingOperations=true
        {{- end }}
        {{- if .Values.catalogRestrictionsEnabled }}
        - --feature-gates
        - CatalogRestrictions=true
        {{- end }}
        {{- if .Values.namespacedServiceBrokerDisabled }}
        - --feature-gates
        - NamespacedServiceBroker=false
        {{- end }}
        {{- if .Values.cascadingDeletionEnabled }}
        - --feature-gates
        - CascadingDeletion=true
        {{- end }}
        volumeMounts:
        - mountPath: /var/run
          name: run
        ports:
        - containerPort: 8444
        {{- if .Values.controllerManager.healthcheck.enabled }}
        readinessProbe:
          httpGet:
            port: 8444
            path: /healthz/ready
            scheme: HTTPS
          failureThreshold: 1
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            port: 8444
            path: /healthz
            scheme: HTTPS
          failureThreshold: 3
          initialDelaySeconds: 40
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        {{- end }}
{{- with .Values.affinity }}
      affinity: {{- tpl (toYaml .) $ | nindent 8 }}
{{- end }}
      {{- if or .Values.controllerManager.nodeSelector .Values.nodeSelector }}
      nodeSelector:
{{ toYaml (mustMerge .Values.controllerManager.nodeSelector .Values.nodeSelector) | indent 8 }}
      {{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
